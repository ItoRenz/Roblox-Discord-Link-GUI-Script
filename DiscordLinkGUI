--[[
	Discord Link Display GUI
	Author: ItoRenz00
	Description: Mobile & PC optimized Discord link display with manual copy support
	Place in: StarterGui > ScreenGui
--]]

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- Variables
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Configuration
local CONFIG = {
	DiscordLink = "https://discord.gg/jRB3vn5gYF", -- Replace with your Discord link
	Colors = {
		Discord = Color3.fromRGB(88, 101, 242),
		DiscordHover = Color3.fromRGB(103, 118, 255),
		Background = Color3.fromRGB(30, 33, 36),
		InputBox = Color3.fromRGB(40, 43, 48),
		InputBoxHover = Color3.fromRGB(45, 48, 53),
		White = Color3.fromRGB(255, 255, 255)
	},
	Mobile = {
		ToggleSize = UDim2.new(0, 65, 0, 25),
		TogglePosition = UDim2.new(0.5, -55, 0, -46),
		FrameSize = UDim2.new(0, 160, 0, 60),
		FramePosition = UDim2.new(0.5, -55, 0, -16),
		TextSize = 11
	},
	PC = {
		ToggleSize = UDim2.new(0, 70, 0, 30),
		TogglePosition = UDim2.new(0.5, -230, 0, -46),
		FrameSize = UDim2.new(0, 170, 0, 70),
		FramePosition = UDim2.new(0.5, -230, 0, -11),
		TextSize = 12
	}
}

-- Platform Detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
local settings = isMobile and CONFIG.Mobile or CONFIG.PC

-- Tween Info
local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local tweenInfoQuick = TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DiscordLinkGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Create Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = settings.ToggleSize
toggleButton.Position = settings.TogglePosition
toggleButton.AnchorPoint = Vector2.new(0.5, 0)
toggleButton.BackgroundColor3 = CONFIG.Colors.Discord
toggleButton.BorderSizePixel = 0
toggleButton.Text = "DISCORD"
toggleButton.TextColor3 = CONFIG.Colors.White
toggleButton.TextSize = settings.TextSize
toggleButton.Font = Enum.Font.GothamBold
toggleButton.ZIndex = 10
toggleButton.Parent = screenGui

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 10)
toggleCorner.Parent = toggleButton

local toggleStroke = Instance.new("UIStroke")
toggleStroke.Color = CONFIG.Colors.White
toggleStroke.Thickness = 2
toggleStroke.Transparency = 0.8
toggleStroke.Parent = toggleButton

-- Create Frame Container
local frame = Instance.new("Frame")
frame.Name = "Container"
frame.Size = settings.FrameSize
frame.Position = settings.FramePosition
frame.AnchorPoint = Vector2.new(0.5, 0)
frame.BackgroundColor3 = CONFIG.Colors.Background
frame.BackgroundTransparency = 0.05
frame.BorderSizePixel = 0
frame.Visible = false
frame.Parent = screenGui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12)
frameCorner.Parent = frame

local frameStroke = Instance.new("UIStroke")
frameStroke.Color = CONFIG.Colors.Discord
frameStroke.Thickness = 1.5
frameStroke.Transparency = 0.5
frameStroke.Parent = frame

-- Create Title
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, -8, 0, 20)
title.Position = UDim2.new(0, 4, 0, 3)
title.BackgroundTransparency = 1
title.Text = "Join Discord"
title.TextColor3 = CONFIG.Colors.White
title.TextSize = settings.TextSize
title.Font = Enum.Font.GothamBold
title.TextXAlignment = Enum.TextXAlignment.Center
title.Parent = frame

-- Create Link TextBox
local linkBox = Instance.new("TextBox")
linkBox.Name = "LinkBox"
linkBox.Size = isMobile and UDim2.new(0.9, 0, 0, 26) or UDim2.new(0.9, 0, 0, 25)
linkBox.Position = isMobile and UDim2.new(0.05, 0, 0, 28) or UDim2.new(0.05, 0, 0, 27)
linkBox.BackgroundColor3 = CONFIG.Colors.InputBox
linkBox.BorderSizePixel = 0
linkBox.Text = CONFIG.DiscordLink
linkBox.TextColor3 = CONFIG.Colors.White
linkBox.TextSize = settings.TextSize
linkBox.Font = Enum.Font.Gotham
linkBox.ClearTextOnFocus = false
linkBox.TextTruncate = Enum.TextTruncate.AtEnd
linkBox.TextEditable = true
linkBox.TextXAlignment = Enum.TextXAlignment.Center
linkBox.Parent = frame

local linkBoxCorner = Instance.new("UICorner")
linkBoxCorner.CornerRadius = UDim.new(0, 8)
linkBoxCorner.Parent = linkBox

local linkBoxStroke = Instance.new("UIStroke")
linkBoxStroke.Color = CONFIG.Colors.Discord
linkBoxStroke.Thickness = 1
linkBoxStroke.Transparency = 0.7
linkBoxStroke.Parent = linkBox

-- Functions
local function toggleFrame()
	if frame.Visible then
		-- Close animation
		for _, child in pairs(frame:GetChildren()) do
			if child:IsA("GuiObject") then
				TweenService:Create(child, tweenInfoQuick, {
					BackgroundTransparency = 1,
					TextTransparency = 1
				}):Play()
			end
		end
		
		local tweenClose = TweenService:Create(frame, tweenInfoQuick, {
			BackgroundTransparency = 1
		})
		tweenClose:Play()
		
		task.wait(0.15)
		frame.Visible = false
	else
		-- Open animation
		frame.Visible = true
		frame.BackgroundTransparency = 1
		
		for _, child in pairs(frame:GetChildren()) do
			if child:IsA("GuiObject") then
				child.BackgroundTransparency = 1
				if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
					child.TextTransparency = 1
				end
			end
		end
		
		TweenService:Create(frame, tweenInfo, {
			BackgroundTransparency = 0.05
		}):Play()
		
		task.wait(0.05)
		
		for _, child in pairs(frame:GetChildren()) do
			if child:IsA("GuiObject") then
				local transparency = (child.Name == "Title") and 1 or (child.Name == "LinkBox" and 0 or 0)
				TweenService:Create(child, tweenInfo, {
					BackgroundTransparency = transparency,
					TextTransparency = 0
				}):Play()
			end
		end
	end
end

-- Event Connections
toggleButton.MouseButton1Click:Connect(toggleFrame)

linkBox.Focused:Connect(function()
	linkBox.CursorPosition = #CONFIG.DiscordLink + 1
	linkBox.SelectionStart = 1
	
	TweenService:Create(linkBoxStroke, tweenInfoQuick, {
		Transparency = 0.3,
		Thickness = 2
	}):Play()
end)

linkBox.FocusLost:Connect(function()
	linkBox.Text = CONFIG.DiscordLink
	
	TweenService:Create(linkBoxStroke, tweenInfoQuick, {
		Transparency = 0.7,
		Thickness = 1
	}):Play()
end)

-- Hover Effects (PC Only)
if not isMobile then
	toggleButton.MouseEnter:Connect(function()
		TweenService:Create(toggleButton, tweenInfoQuick, {
			BackgroundColor3 = CONFIG.Colors.DiscordHover,
			Size = UDim2.new(0, 74, 0, 32)
		}):Play()
		TweenService:Create(toggleStroke, tweenInfoQuick, {
			Transparency = 0.6
		}):Play()
	end)

	toggleButton.MouseLeave:Connect(function()
		TweenService:Create(toggleButton, tweenInfoQuick, {
			BackgroundColor3 = CONFIG.Colors.Discord,
			Size = settings.ToggleSize
		}):Play()
		TweenService:Create(toggleStroke, tweenInfoQuick, {
			Transparency = 0.8
		}):Play()
	end)
	
	linkBox.MouseEnter:Connect(function()
		TweenService:Create(linkBox, tweenInfoQuick, {
			BackgroundColor3 = CONFIG.Colors.InputBoxHover
		}):Play()
	end)

	linkBox.MouseLeave:Connect(function()
		TweenService:Create(linkBox, tweenInfoQuick, {
			BackgroundColor3 = CONFIG.Colors.InputBox
		}):Play()
	end)
end

-- Debug Output
print("✓ Discord Link GUI Loaded!")
print("Author: ItoRenz00")
print("Platform: " .. (isMobile and "Mobile" or "PC"))
print("Manual Copy: Click textbox to select all text ✓")
